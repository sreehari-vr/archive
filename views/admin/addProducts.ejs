<%- include("../../views/partials/admin/header") %>

<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-lg-10 col-xl-8 pt-5">
      <div class="card border-0 shadow-lg">
        <div class="card-header bg-gradient-primary text-white py-3">
          <h2 class="text-center mb-0">Add New Product</h2>
        </div>
        <div class="card-body p-4">
          <form onsubmit="addProduct(event)" enctype="multipart/form-data" class="needs-validation" novalidate>
            <div class="row g-3">
              <div class="col-12">
                <label for="product_name" class="form-label">Product Name</label>
                <div class="input-group has-validation">
                  <span class="input-group-text"><i class="bi bi-tag"></i></span>
                  <input 
                    type="text" 
                    class="form-control" 
                    id="product_name" 
                    name="productName" 
                    required 
                  />
                  <div class="invalid-feedback" id="productName-error">Product name is required</div>
                </div>
              </div>

              <div class="col-12">
                <label for="descriptionid" class="form-label">Full Description</label>
                <div class="input-group has-validation">
                  <span class="input-group-text"><i class="bi bi-text-paragraph"></i></span>
                  <textarea 
                    class="form-control" 
                    id="descriptionid" 
                    name="description" 
                    rows="4" 
                    required
                  ></textarea>
                  <div class="invalid-feedback" id="description-error">Description is required</div>
                </div>
              </div>

              <div class="col-md-4">
                <label for="regularPrice" class="form-label">Regular Price</label>
                <div class="input-group has-validation">
                  <span class="input-group-text">â‚¹</span>
                  <input 
                    type="number" 
                    class="form-control" 
                    id="regularPrice" 
                    name="regularPrice" 
                    required 
                  />
                  <div class="invalid-feedback" id="regularPrice-error">Enter a valid price</div>
                </div>
              </div>

              <div class="col-md-4">
                <label for="quantity" class="form-label">Quantity</label>
                <div class="input-group has-validation">
                  <span class="input-group-text"><i class="bi bi-box"></i></span>
                  <input 
                    type="number" 
                    class="form-control" 
                    id="quantity" 
                    name="quantity" 
                    required 
                  />
                  <div class="invalid-feedback" id="quantity-error">Enter a valid quantity</div>
                </div>
              </div>

              <div class="col-md-4">
                <label for="offer" class="form-label">Offer (%)</label>
                <div class="input-group has-validation">
                  <span class="input-group-text">%</span>
                  <input 
                    type="number" 
                    class="form-control" 
                    id="offer" 
                    name="offer" 
                    min="0" 
                    max="100" 
                    required
                  />
                  <div class="invalid-feedback" id="offer-error">Enter a valid offer percentage</div>
                </div>
              </div>

              <div class="col-12">
                <label for="category" class="form-label">Category</label>
                <div class="input-group has-validation">
                  <span class="input-group-text"><i class="bi bi-list"></i></span>
                  <select class="form-select" id="category" name="category" required>
                    <% categories.forEach(category => { %>
                      <option value="<%= category._id %>">
                        <%= category.name %>
                      </option>
                    <% }) %>
                  </select>
                  <div class="invalid-feedback" id="category-error">Please select a category</div>
                </div>
              </div>

              <div class="col-12">
                <div class="card">
                  <div class="card-header">
                    <h4 class="mb-0">Choose Images</h4>
                  </div>
                  <div class="card-body">
                    <div class="row g-3">
                      <% for(let i = 1; i <= 4; i++) { %>
                        <div class="col-md-3">
                          <input 
                            class="form-control mb-2" 
                            type="file" 
                            id="input<%= i %>" 
                            name="images" 
                            accept="image/png, image/jpeg, image/jpg" 
                          />
                          <img src="" id="imgView<%= i %>" class="img-fluid mb-2" style="display: none;">
                          <div id="cropContainer<%= i %>" class="image-cropper position-relative" style="display: none;">
                            <img 
                              src="" 
                              id="croppedImg<%= i %>" 
                              alt="Image Preview" 
                              class="img-fluid mb-2" 
                            />
                            <div class="crop-actions mt-2">
                              <button 
                                type="button" 
                                onclick="cropImage('<%= i %>')" 
                                class="btn btn-sm btn-primary"
                              >
                                Crop
                              </button>
                            </div>
                          </div>
                        </div>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>

              <div class="col-12">
                <button type="submit" class="btn btn-primary w-100 py-2">
                  Publish Product
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css" />
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
let croppers = {};
let croppedFiles = {};

[1, 2, 3, 4].forEach(index => {
  const inputElement = document.getElementById(`input${index}`);
  const imgViewElement = document.getElementById(`imgView${index}`);
  const cropContainer = document.getElementById(`cropContainer${index}`);
  const croppedImgElement = document.getElementById(`croppedImg${index}`);

  inputElement.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(event) {
        if (croppers[index]) {
          croppers[index].destroy();
        }

        imgViewElement.src = event.target.result;
        imgViewElement.style.display = 'block';
        croppedImgElement.src = event.target.result;
        croppedImgElement.style.display = 'block';
        cropContainer.style.display = 'block';

        croppers[index] = new Cropper(croppedImgElement, {
          aspectRatio: 1,
          viewMode: 1,
          autoCropArea: 1,
        });
      };
      reader.readAsDataURL(file);
    }
  });
});

function cropImage(index) {
  const cropper = croppers[index];
  const croppedImgElement = document.getElementById(`croppedImg${index}`);
  const imgViewElement = document.getElementById(`imgView${index}`);

  if (cropper) {
    cropper.getCroppedCanvas().toBlob((blob) => {
      const file = new File([blob], `croppedImage${index}.png`, {
        type: "image/png",
      });
      
      imgViewElement.src = URL.createObjectURL(blob);
      croppedImgElement.src = URL.createObjectURL(blob);
      croppedFiles[index] = file;

      cropper.destroy();
      delete croppers[index];
    }, "image/png");
  }
}

function validateForm() {
  const form = document.querySelector('form');
  let isValid = form.checkValidity();
  form.classList.add('was-validated');
  
  const productName = document.getElementById('product_name').value.trim();
  const description = document.getElementById('descriptionid').value.trim();
  const regularPrice = parseFloat(document.getElementById('regularPrice').value);
  const quantity = parseInt(document.getElementById('quantity').value);
  
  if (!productName || productName.trim().length === 0) {
    document.getElementById('productName-error').textContent = "Product name cannot start with a space";
    document.getElementById('product_name').setCustomValidity("Product name cannot start with a space");
    isValid = false;
  } else {
    document.getElementById('product_name').setCustomValidity("");
  }

  if (!description || description.trim().length === 0) {
    document.getElementById('description-error').textContent = "Description cannot start with a space";
    document.getElementById('descriptionid').setCustomValidity("Description cannot start with a space");
    isValid = false;
  } else {
    document.getElementById('descriptionid').setCustomValidity("");
  }

  if (regularPrice < 0) {
    document.getElementById('regularPrice-error').textContent = "Price cannot be negative";
    document.getElementById('regularPrice').setCustomValidity("Price cannot be negative");
    isValid = false;
  } else {
    document.getElementById('regularPrice').setCustomValidity("");
  }
  
  if (quantity < 0) {
    document.getElementById('quantity-error').textContent = "Quantity cannot be negative";
    document.getElementById('quantity').setCustomValidity("Quantity cannot be negative");
    isValid = false;
  } else {
    document.getElementById('quantity').setCustomValidity("");
  }
  
  if (!Object.keys(croppedFiles).length) {
    Swal.fire({
      icon: "error",
      title: "Image Required",
      text: "Please upload at least one image.",
    });
    return false;
  }
  
  return isValid;
}

function addProduct(event) {
  event.preventDefault();
  
  if (!validateForm()) {
    return;
  }

  const formData = new FormData();
  formData.append('productName', document.getElementById('product_name').value);
  formData.append('description', document.getElementById('descriptionid').value);
  formData.append('regularPrice', document.getElementById('regularPrice').value);
  formData.append('quantity', document.getElementById('quantity').value);
  formData.append('category', document.getElementById('category').value);
  formData.append('offer', document.getElementById('offer').value);

  Object.keys(croppedFiles).forEach(index => {
    formData.append('images', croppedFiles[index]);
  });

  $.ajax({
    method: "POST",
    url: "/admin/addProduct",
    data: formData,
    contentType: false,
    processData: false,
    success: function(response) {
      if (response.success) {
        Swal.fire({
          icon: "success",
          title: "Successfully Added",
          text: "Product Added",
          timer: 1500
        }).then(() => {
          window.location.href = "/admin/products";
        });
      } else {
        if (response.error === "Product name already exists") {
          document.getElementById('productName-error').textContent = "Product name already exists";
          document.getElementById('product_name').setCustomValidity("Product name already exists");
          document.querySelector('form').classList.add('was-validated');
        } else {
          Swal.fire({
            icon: "error",
            title: "Not Added",
            text: response.error || "Product not Added",
          });
        }
      }
    },
    error: function(error) {
      console.error("error response:", error);
      Swal.fire({
        icon: "error",
        title: "Error occurred",
        text: error.responseJSON?.error || "Something went wrong",
      });
    },
  });
}
</script>

<%- include("../../views/partials/admin/footer") %>