<%- include("../../views/partials/user/header") %>
<style>
    .error-message{
        color: red;
    }
</style>
<section class="content-main m-5">
   <div class="card mx-auto card-login col-4">
       <div class="card-body">
           <h4 class="card-title mb-4">Change Password</h4>


           <form id="changePasswordForm" method="POST" action="/changePassword" onsubmit="return validateLoginForm()">
            <input class="form-control mb-2" type="password" name="currentPassword" placeholder="Current Password" id="currentPassword">
            <div class="error-message" id="password-error"></div>

            <input class="form-control mb-2" type="password" name="newPassword" placeholder="New Password" id="newPassword">
            <div class="error-message" id="newPass-error"></div>

            <input class="form-control mb-2" type="password" name="confirmPassword" placeholder="Confirm New Password" id="confirmPass">
            <div class="error-message" id="confirmPass-error"></div>

            <button type="submit"  class="btn btn-primary w-100">Change Password</button>
          </form>
          
         
          
       </div>
   </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function validateLoginForm() {
        const currentPasswordInput = document.getElementById('currentPassword');
        const newPasswordInput = document.getElementById('newPassword');
        const confirmPassInput = document.getElementById('confirmPass');
    
        const passwordError = document.getElementById('password-error');
        const newPassError = document.getElementById('newPass-error');
        const confirmPassError = document.getElementById('confirmPass-error');
    
        // Clear previous error messages
        passwordError.textContent = "";
        newPassError.textContent = "";
        confirmPassError.textContent = "";
    
        // Get values and set validation criteria
        const currentPassVal = currentPasswordInput.value.trim();
        const passVal = newPasswordInput.value.trim();
        const cPassVal = confirmPassInput.value.trim();
        const alpha = /[a-zA-Z]/.test(passVal);
        const num = /\d/.test(passVal);
    
        // Validate current password
        if (!currentPassVal) {
            passwordError.textContent = "Please enter your current password.";
            return false;
        }
    
        // Validate new password length
        if (passVal.length < 8) {
            newPassError.textContent = "Password should contain at least 8 characters.";
        } else if (!alpha || !num) {
            newPassError.textContent = "Password should contain both letters and numbers.";
        } else if (passVal !== cPassVal) {
            confirmPassError.textContent = "Passwords do not match.";
        }else if (currentPassVal === passVal){
            confirmPassError.textContent = "New password must be different from the current password";
        
        } else {
            // If all validations pass
            return true;
        }
    
        // Return false if any validation fails
        return false;
    }
    

    document.getElementById('changePasswordForm').addEventListener('submit', async function (e) {
        e.preventDefault(); // Prevent default form submission
      
        const currentPassword = document.getElementById('currentPassword').value.trim();
        const newPassword = document.getElementById('newPassword').value.trim();
        const confirmPassword = document.getElementById('confirmPass').value.trim();
      
        try {
          const response = await fetch('/changePassword', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
          });
      
          const result = await response.json();
      
          if (result.success) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: result.message,
            }).then(() => {
              // Redirect to user profile or another page
              window.location.href = '/userProfile';
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: result.message,
            });
          }
        } catch (error) {
          console.error("Error:", error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: "An unexpected error occurred.",
          });
        }
      });
      

   
</script>
<%- include("../../views/partials/user/footer") %>

